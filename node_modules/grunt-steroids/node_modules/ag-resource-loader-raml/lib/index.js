(function() {
  var ramlSchema, ramlSchemaToResource, ramlSchemaToResourceBundle;

  ramlSchema = require('./raml/schema');

  ramlSchemaToResource = require('./raml/resource');

  ramlSchemaToResourceBundle = require('./raml/bundle');

  module.exports = {
    loadFile: function(urlToRaml) {
      var loadSchema;
      loadSchema = (function() {
        var schema;
        schema = null;
        return function() {
          if (schema == null) {
            schema = ramlSchema.fromUrl(urlToRaml);
          }
          return schema;
        };
      })();
      return {
        createResource: function(name) {
          return loadSchema().then(ramlSchemaToResource(name));
        }
      };
    },
    loadLocalFile: function(pathToRaml) {
      var loadSchema;
      loadSchema = (function() {
        var schema;
        schema = null;
        return function() {
          if (schema == null) {
            schema = ramlSchema.fromFile(pathToRaml);
          }
          return schema;
        };
      })();
      return {
        toResourceBundle: function() {
          return loadSchema().then(ramlSchemaToResourceBundle);
        }
      };
    },
    loadObject: function(ramlSchemaObject) {
      var schema;
      schema = ramlSchema.fromObject(ramlSchemaObject);
      return {
        createResource: function(name) {
          return ramlSchemaToResource(name)(schema);
        }
      };
    }
  };

}).call(this);
